[{"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\index.js":"1","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\App\\index.js":"2","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\firebase.js":"3","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\HomePage\\index.js":"4","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Register\\index.js":"5","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Dashboard\\index.js":"6","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Login\\index.js":"7","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\listItems\\index.js":"8","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Dashboard\\AppDrawer\\index.js":"9","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Bookings\\index.js":"10","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Rooms\\index.js":"11","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\index.js":"12","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\Services\\index.js":"13","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\CompanyUsers\\index.js":"14","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\Clients\\index.js":"15","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\MyAccount\\index.js":"16","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\index.js":"17","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddTypeDialog\\index.js":"18","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddRooms\\index.js":"19","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddTypeDialog\\RoomTypesTable\\index.js":"20","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddRooms\\RoomsTable\\index.js":"21","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Models\\Room.js":"22","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\AddHouseImages\\index.js":"23"},{"size":152,"mtime":1607859041571,"results":"24","hashOfConfig":"25"},{"size":1799,"mtime":1612005323039,"results":"26","hashOfConfig":"25"},{"size":3908,"mtime":1611519438288,"results":"27","hashOfConfig":"25"},{"size":3719,"mtime":1611858615501,"results":"28","hashOfConfig":"25"},{"size":4216,"mtime":1612007574063,"results":"29","hashOfConfig":"25"},{"size":4486,"mtime":1610884948276,"results":"30","hashOfConfig":"25"},{"size":3041,"mtime":1612004378000,"results":"31","hashOfConfig":"25"},{"size":1407,"mtime":1610886058660,"results":"32","hashOfConfig":"25"},{"size":5862,"mtime":1611409603334,"results":"33","hashOfConfig":"25"},{"size":2551,"mtime":1610886123982,"results":"34","hashOfConfig":"25"},{"size":2545,"mtime":1610886123962,"results":"35","hashOfConfig":"25"},{"size":3940,"mtime":1611409581067,"results":"36","hashOfConfig":"25"},{"size":1704,"mtime":1610909603849,"results":"37","hashOfConfig":"25"},{"size":1718,"mtime":1610909603866,"results":"38","hashOfConfig":"25"},{"size":1706,"mtime":1610909603882,"results":"39","hashOfConfig":"25"},{"size":1704,"mtime":1610909603911,"results":"40","hashOfConfig":"25"},{"size":6876,"mtime":1611568176251,"results":"41","hashOfConfig":"25"},{"size":2229,"mtime":1611434104973,"results":"42","hashOfConfig":"25"},{"size":3260,"mtime":1611579307727,"results":"43","hashOfConfig":"25"},{"size":3005,"mtime":1611516513398,"results":"44","hashOfConfig":"25"},{"size":4571,"mtime":1611579481462,"results":"45","hashOfConfig":"25"},{"size":1310,"mtime":1611577415002,"results":"46","hashOfConfig":"25"},{"size":1060,"mtime":1612006414613,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vyak59",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\index.js",[],["112","113"],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\App\\index.js",[],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\firebase.js",["114"],"import app from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firebase-database'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCHxRrIh_ird6JeDRaKU_7bm2EzK9bsY3s\",\r\n    authDomain: \"kotalishious-dff22.firebaseapp.com\",\r\n    databaseURL: \"https://kotalishious-dff22.firebaseio.com\",\r\n    projectId: \"kotalishious-dff22\",\r\n    storageBucket: \"kotalishious-dff22.appspot.com\",\r\n    messagingSenderId: \"180338444173\",\r\n    appId: \"1:180338444173:web:708494a4359e5bc639dfc4\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig)\r\n        this.auth = app.auth()\r\n        this.db = app.database()\r\n    }\r\n\r\n    login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    logout() {\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    async register(name, email, password) {\r\n        await this.auth.createUserWithEmailAndPassword(email, password)\r\n        return this.auth.currentUser.updateProfile({\r\n            displayName: name\r\n        })\r\n    }\r\n\r\n    addHouse(name, plotN0, city, phone, email) {\r\n        if (!this.auth.currentUser) {\r\n            return alert('Not authorized')\r\n        }\r\n        let user;\r\n        user = app.auth().currentUser;\r\n\r\n        return this.db.ref('guesthouses').child(\"House Details\").push({\r\n            houseId: user.uid,\r\n            name: name,\r\n            plotN0: plotN0,\r\n            city: city,\r\n            phone: phone,\r\n            email: email,\r\n        })\r\n            .catch((error) => {\r\n                alert(error.message);\r\n            })\r\n\r\n    }\r\n\r\n    //adding a room type\r\n    addRoomType(typeName, maxPerson, price, hasSingleUse) {\r\n        if (!this.auth.currentUser) {\r\n            return alert('Not authorized')\r\n        }\r\n\r\n        let user;\r\n        user = app.auth().currentUser;\r\n        return this.db.ref('guesthouses').child(\"Rooms Details\").child(\"RoomTypes\").push({\r\n            houseId: user.uid,\r\n            typeName: typeName,\r\n            maxPerson: maxPerson,\r\n            price: price,\r\n            hasSingleUse: hasSingleUse,\r\n        }).catch((error) => {\r\n            alert(error.message);\r\n        })\r\n    }\r\n\r\n    //adding a room\r\n    addRooms(roomType,roomNo){\r\n        if (!this.auth.currentUser) {\r\n            return alert('Not authorized')\r\n        }\r\n\r\n        let user;\r\n        user = app.auth().currentUser;\r\n        return this.db.ref('guesthouses').child(\"Rooms Details\").child(\"Rooms\").push({\r\n            houseId: user.uid,\r\n            roomType: roomType,\r\n            roomNo:\"Room \"+roomNo,\r\n            roomStatus:1,\r\n        }).catch((error) => {\r\n            alert(error.message);\r\n        })\r\n    }\r\n\r\n    //getting room type\r\n    allRoomTypes() {\r\n        let newRoomType = [];\r\n        let roomTypeColle = [];\r\n        var starCountRef = app.database().ref('guesthouses').child(\"Rooms Details\").child(\"RoomTypes\");\r\n        starCountRef.on('value', (snapshot) => {\r\n            snapshot.forEach(data => {\r\n                const dataVal = data.val()\r\n                newRoomType.push({\r\n                    typeName: dataVal.typeName,\r\n                    maxPerson: dataVal.maxPerson,\r\n                    price: dataVal.price,\r\n                    hasSingleUse: dataVal.hasSingleUse,\r\n                })\r\n\r\n                roomTypeColle.push(newRoomType);\r\n            })\r\n\r\n            return roomTypeColle;\r\n            console.log(roomTypeColle);\r\n\r\n        });\r\n    }\r\n\r\n    isInitialized() {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve)\r\n        })\r\n    }\r\n\r\n    getCurrentUsername() {\r\n        return this.auth.currentUser && this.auth.currentUser.displayName\r\n    }\r\n\r\n    getCurrentUserId() {\r\n        let user;\r\n        user = app.auth().currentUser;\r\n\r\n        console.log(user.uid);\r\n        return user.uid;\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\HomePage\\index.js",[],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Register\\index.js",[],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Dashboard\\index.js",["115"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport firebase from '../firebase'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport AppDrawer from \"./AppDrawer\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24,\r\n        backgroundColor: theme.palette.secondary.main, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n});\r\n\r\nfunction Dashboard(props) {\r\n    const {classes} = props\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    if (!firebase.getCurrentUsername()) {\r\n        // not logged in\r\n        alert('Please login first')\r\n        props.history.replace('/login')\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppDrawer/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n\r\n                        <Grid item xs={12} md={8} lg={9}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <h1>space 1</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <h1>space 2</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <h1>space 3</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <h1>space 4</h1>\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Dashboard))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Login\\index.js",[],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\listItems\\index.js",[],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Dashboard\\AppDrawer\\index.js",["116","117"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems } from '../../listItems';\r\nimport firebase from '../../firebase'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24,\r\n        backgroundColor: theme.palette.secondary.main, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n});\r\n\r\nfunction AppDrawer(props) {\r\n    const { classes } = props\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    if (!firebase.getCurrentUsername()) {\r\n        // not logged in\r\n        alert('Please login first')\r\n        props.history.replace('/login')\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        {firebase.getCurrentUsername()}\r\n                    </Typography>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge color=\"secondary\" onClick={logout}>\r\n                            <ExitToAppIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <List>{mainListItems}</List>\r\n\r\n            </Drawer>\r\n        </div>\r\n    );\r\n\r\n    async function logout() {\r\n        await firebase.logout()\r\n        props.history.push('/')\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AppDrawer))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Bookings\\index.js",["118","119"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport firebase from '../firebase'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport AppDrawer from \"../Dashboard/AppDrawer\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n});\r\n\r\nfunction Bookings(props) {\r\n    const {classes} = props\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    if (!firebase.getCurrentUsername()) {\r\n        // not logged in\r\n        alert('Please login first')\r\n        props.history.replace('/login')\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppDrawer/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n\r\n                        <Grid item xs={12} md={8} lg={9}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <h1>space 1</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <h1>space 2</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <h1>space 3</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <h1>space 4</h1>\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Bookings))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Rooms\\index.js",["120","121"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport firebase from '../firebase'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport AppDrawer from \"../Dashboard/AppDrawer\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n});\r\n\r\nfunction Rooms(props) {\r\n    const {classes} = props\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    if (!firebase.getCurrentUsername()) {\r\n        // not logged in\r\n        alert('Please login first')\r\n        props.history.replace('/login')\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppDrawer/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n\r\n                        <Grid item xs={12} md={8} lg={9}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <h1>space 1</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <h1>space 2</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <h1>space 3</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <h1>space 4</h1>\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Rooms))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\index.js",["122"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport firebase from '../firebase'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport AppDrawer from \"../Dashboard/AppDrawer\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Services from \"./MiniComponents/Services\";\r\nimport MyAccount from \"./MiniComponents/MyAccount\";\r\nimport CompanyUsers from \"./MiniComponents/CompanyUsers\";\r\nimport Clients from \"./MiniComponents/Clients\";\r\nimport RoomList from \"./MiniComponents/RoomList\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paddingLeft: theme.spacing(35),\r\n        marginBottom:10,\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    }, appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nfunction MyHouse(props) {\r\n    const {classes} = props\r\n    const [frag, setFrag] = React.useState(1);\r\n\r\n    if (!firebase.getCurrentUsername()) {\r\n        // not logged in\r\n        alert('Please login first')\r\n        props.history.replace('/login')\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppDrawer/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={event => (setFrag(1))}>\r\n                                    Rooms\r\n                                </Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={event => (setFrag(2))}>\r\n                                    Clients\r\n                                </Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={event => (setFrag(3))}>\r\n                                    Services\r\n                                </Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={event => (setFrag(4))}>\r\n                                    Company & Users\r\n                                </Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={event => (setFrag(5))}>\r\n                                    My Account\r\n                                </Button>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <div>\r\n                        {\r\n                            frag === 1 && <RoomList/>\r\n                        }\r\n                        {\r\n                            frag === 2 && <Services/>\r\n                        }\r\n                        {\r\n                            frag === 3 && <MyAccount/>\r\n                        }\r\n                        {\r\n                            frag === 4 && <CompanyUsers/>\r\n                        }\r\n                        {\r\n                            frag === 5 && <Clients/>\r\n                        }\r\n                    </div>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(MyHouse))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\Services\\index.js",["123"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paddingLeft: theme.spacing(35),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nfunction Services(props) {\r\n    const {classes} = props\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <h1>Services</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Services))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\CompanyUsers\\index.js",["124"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paddingLeft: theme.spacing(35),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nfunction CompanyUsers(props) {\r\n    const {classes} = props\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                               <h1>Company & Users</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(CompanyUsers))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\Clients\\index.js",["125"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paddingLeft: theme.spacing(35),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    }, appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nfunction Clients(props) {\r\n    const {classes} = props\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <h1>Clients</h1>\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Clients))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\MyAccount\\index.js",["126"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paddingLeft: theme.spacing(35),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nfunction MyAccount(props) {\r\n    const {classes} = props\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <h1>my acc</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(MyAccount))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\index.js",["127","128","129","130","131","132","133","134","135","136"],"import React, {useEffect} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n    ButtonGroup, Checkbox,\r\n    ClickAwayListener, Divider,\r\n    Grow,\r\n    MenuItem,\r\n    MenuList,\r\n    Paper,\r\n    Popper, Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddTypeDialog from '../RoomList/AddTypeDialog'\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport AddDialog from \"./AddRooms\";\r\nimport RoomTypesTable from \"./AddTypeDialog/RoomTypesTable\";\r\nimport RoomsTable from \"./AddRooms/RoomsTable\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        paddingLeft: theme.spacing(35),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    addRoomBtn: {\r\n        marginLeft: 10,\r\n    }, dialogContent: {\r\n        marginTop: -20,\r\n    },tables:{\r\n        marginTop: 10,\r\n    },\r\n});\r\n\r\nconst options = ['Rooms', 'Room Type'];\r\n\r\n\r\nfunction RoomList(props) {\r\n    const {classes} = props\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDia, setOpenDia] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleAdd = () => {\r\n        setOpenDia(true);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <main className={classes.content}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup variant=\"contained\" color=\"secondary\" ref={anchorRef} aria-label=\"split button\">\r\n                            <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                aria-controls={open ? 'split-button-menu' : undefined}\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                onClick={event => (setOpen((prevOpen) => !prevOpen))}\r\n                            >\r\n                                <ArrowDropDownIcon/>\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                            {({TransitionProps, placement}) => (\r\n                                <Grow\r\n                                    {...TransitionProps}\r\n                                    style={{\r\n                                        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                    }}\r\n                                >\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                            <MenuList id=\"split-button-menu\">\r\n                                                {options.map((option, index) => (\r\n                                                    <MenuItem\r\n                                                        key={option}\r\n                                                        disabled={index === 2}\r\n                                                        selected={index === selectedIndex}\r\n                                                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                    >\r\n                                                        {option}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                </Grow>\r\n                            )}\r\n                        </Popper>\r\n                        <Button className={classes.addRoomBtn} onClick={handleAdd} variant=\"contained\"\r\n                                color=\"secondary\">\r\n                            <AddIcon/>\r\n                            Add {options[selectedIndex]}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className={classes.tables}>\r\n                    <Grid item xs={12}>\r\n                        {options[selectedIndex] === 'Room Type' && <RoomTypesTable/>}\r\n                        {options[selectedIndex] === 'Rooms' &&<RoomsTable/>}\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </main>\r\n            <div>\r\n                <Dialog\r\n                    open={openDia}\r\n                    onClose={event => (setOpenDia(false))}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"add-dialog-box\">Add {options[selectedIndex]}</DialogTitle>\r\n\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {options[selectedIndex] === 'Rooms' &&<AddDialog/>}\r\n\r\n                        {options[selectedIndex] === 'Room Type' &&<AddTypeDialog/>}\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(RoomList))","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddTypeDialog\\index.js",["137","138"],"import React from 'react';\r\nimport {Button, Checkbox, FormControl, FormControlLabel, Input, InputLabel} from \"@material-ui/core\";\r\nimport firebase from \"../../../../firebase\";\r\nimport RoomList from \"../index\";\r\n\r\n\r\nexport default function AddTypeDialog(props) {\r\n    const {classes} = props\r\n\r\n    const [typeName, setTypeName] = React.useState(\"\");\r\n    const [maxPerson, setMaxPerson] = React.useState(1);\r\n    const [price, setPrice] = React.useState(50);\r\n    const [hasSingleUse, setHasSingleUse] = React.useState(false);\r\n\r\n    function addRoomType(){\r\n        try {\r\n            firebase.addRoomType(typeName,maxPerson,price,hasSingleUse)\r\n        } catch(error) {\r\n            alert(error.message)\r\n        }\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel>Name</InputLabel>\r\n                <Input id=\"typeName\" name=\"typeName\" autoComplete=\"off\" autoFocus value={typeName}\r\n                       onChange={e => setTypeName(e.target.value)}/>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel>Maximum Persons</InputLabel>\r\n                <Input id=\"maxPerson\" type=\"number\" name=\"maxPerson\" autoComplete=\"off\" autoFocus\r\n                       value={maxPerson} onChange={e => setMaxPerson(e.target.value)}/>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel>Price</InputLabel>\r\n                <Input id=\"price\" type=\"number\" name=\"price\" autoComplete=\"off\" autoFocus value={price}\r\n                       onChange={e => setPrice(e.target.value)}/>\r\n            </FormControl>\r\n            <FormControlLabel\r\n                control={<Checkbox checked={hasSingleUse} onChange={event => (setHasSingleUse(true))} name=\"hasSingleUse\"/>}\r\n                label=\"Has Single Use\"\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={addRoomType}>\r\n                Add Type\r\n            </Button>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddRooms\\index.js",["139"],"import React, {useEffect} from 'react';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Input,\r\n    InputLabel,\r\n    NativeSelect\r\n} from \"@material-ui/core\";\r\nimport firebase from \"../../../../firebase\";\r\n\r\n\r\n\r\nexport default function AddDialog(props) {\r\n    const [roomTypeSelector, setRoomTypeSelector] = React.useState(\"\");\r\n    const [noRooms, setNoRooms] = React.useState(1);\r\n    const [roomType, setRoomType] = React.useState([]);\r\n    const [roomNo, setRoomNo] = React.useState(1);\r\n\r\n    let newRoomType = [];\r\n    let roomTypeColle = [];\r\n\r\n    let userId;\r\n    userId = firebase.getCurrentUserId();\r\n\r\n    //retriving data\r\n    useEffect(() => {\r\n        firebase.db.ref('guesthouses').child(\"Rooms Details\").child(\"RoomTypes\").on('value', (snapshot) => {\r\n            snapshot.forEach(data => {\r\n                const dataVal = data.val()\r\n                if (dataVal.houseId===userId) {\r\n                    newRoomType.push({\r\n                        typeName: dataVal.typeName,\r\n                        houseId: dataVal.houseId,\r\n                    })\r\n                }\r\n            })\r\n            roomTypeColle = newRoomType;\r\n        })\r\n\r\n        setRoomType(roomTypeColle)\r\n\r\n    }, [])\r\n\r\n\r\n    function addRoom() {\r\n        var temp=roomNo;\r\n        for (var i = 0; i < noRooms; i++) {\r\n            temp += i\r\n            try {\r\n                console.log(roomTypeSelector)\r\n                firebase.addRooms(roomTypeSelector,temp)\r\n\r\n            } catch (error) {\r\n                alert(error.message)\r\n            }\r\n\r\n        }\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <FormControl >\r\n                <NativeSelect\r\n                    value={roomTypeSelector}\r\n                    onChange={event => (setRoomTypeSelector(event.target.value))}\r\n                    inputProps={{\r\n                        name: 'roomType',\r\n                        id: 'room-type',\r\n                    }}\r\n                >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    {roomType.map((val)=>(\r\n                    <option value={val.typeName}>{val.typeName}</option>\r\n                    ))}\r\n                </NativeSelect>\r\n                <FormHelperText>Select The type of room</FormHelperText>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel>Room Number</InputLabel>\r\n                <Input id=\"roomNo\" type=\"number\" name=\"roomNo\" autoComplete=\"off\" autoFocus\r\n                       value={roomNo} onChange={e => setRoomNo(e.target.value)}/>\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel>Number of Rooms</InputLabel>\r\n                <Input id=\"maxPerson\" type=\"number\" name=\"maxPerson\" autoComplete=\"off\" autoFocus\r\n                       value={noRooms} onChange={e => setNoRooms(e.target.value)}/>\r\n            </FormControl>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={addRoom}>\r\n                Add Room\r\n            </Button>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddTypeDialog\\RoomTypesTable\\index.js",["140","141","142","143","144","145"],"import React, {useEffect} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Input,\r\n    InputLabel, makeStyles,\r\n    Paper, Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@material-ui/core\";\r\nimport firebase from \"../../../../../firebase\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\n\r\nexport default function RoomTypesTable(props) {\r\n    const classes = useStyles();\r\n    const [roomType, setRoomType] = React.useState([]);\r\n\r\n    let newRoomType = [];\r\n    let roomTypeColle = [];\r\n\r\n    let userId;\r\n    userId = firebase.getCurrentUserId();\r\n\r\n    //retriving data\r\n    useEffect(() => {\r\n        firebase.db.ref('guesthouses').child(\"Rooms Details\").child(\"RoomTypes\").on('value', (snapshot) => {\r\n            snapshot.forEach(data => {\r\n                const dataVal = data.val()\r\n                if (dataVal.houseId===userId) {\r\n                    newRoomType.push({\r\n                        typeName: dataVal.typeName,\r\n                        maxPerson: dataVal.maxPerson,\r\n                        price: dataVal.price,\r\n                        hasSingleUse: dataVal.hasSingleUse,\r\n                    })\r\n                }\r\n\r\n            })\r\n            roomTypeColle = newRoomType;\r\n\r\n        })\r\n\r\n        setRoomType(roomTypeColle)\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">Type</TableCell>\r\n                            <TableCell align=\"left\">Price</TableCell>\r\n                            <TableCell align=\"left\">Maximum Person</TableCell>\r\n                            <TableCell align=\"center\">Has Single Use</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {roomType.map((val) => (\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">{val.typeName}</TableCell>\r\n                                    <TableCell align=\"left\">{val.price}</TableCell>\r\n                                    <TableCell align=\"left\">{val.maxPerson}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Checkbox\r\n                                            checked={val.hasSingleUse}\r\n                                            inputProps={{'aria-label': 'primary checkbox'}}/>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        )\r\n                        }\r\n\r\n                    </TableBody>\r\n                </Table>\r\n\r\n            </TableContainer>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\RoomList\\AddRooms\\RoomsTable\\index.js",["146","147","148","149"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Checkbox,\r\n    makeStyles,\r\n    Paper, Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@material-ui/core\";\r\nimport firebase from \"../../../../../firebase\";\r\nimport Room from \"../../../../../Models/Room\"\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 550,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\n\r\nexport default function RoomsTable(props) {\r\n    const classes = useStyles();\r\n    const [rooms, setRooms] = React.useState([]);\r\n    const [flaga, setFlaga] = useState(0);\r\n\r\n    let newRoom = [];\r\n    let roomColle = [];\r\n\r\n    let userId;\r\n    userId = firebase.getCurrentUserId();\r\n\r\n    //retriving data\r\n    useEffect(() => {\r\n        firebase.db.ref('guesthouses').child(\"Rooms Details\").child(\"Rooms\").on('value', (snapshot) => {\r\n            snapshot.forEach(data => {\r\n                const dataVal = data.val()\r\n                if (dataVal.houseId === userId) {\r\n                    firebase.db.ref('guesthouses').child(\"Rooms Details\").child(\"RoomTypes\").on('value', (snapshot) => {\r\n                        snapshot.forEach(child => {\r\n                            const roomTypeVal = child.val()\r\n                            if (dataVal.roomType === roomTypeVal.typeName) {\r\n                                let roomObj = new Room(dataVal.roomNo, dataVal.houseId, roomTypeVal.maxPerson,\r\n                                    roomTypeVal.price, dataVal.roomType, dataVal.roomStatus, roomTypeVal.hasSingleUse)\r\n                                newRoom.push({\r\n                                    roomObj\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                    })\r\n                }\r\n            })\r\n            console.log(newRoom)\r\n            roomColle = newRoom;\r\n        })\r\n        console.log(roomColle)\r\n\r\n        setRooms(roomColle)\r\n    }, [])\r\n\r\n\r\n    function getAnnouncement(roomStatus) {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">Room No.</TableCell>\r\n                            <TableCell align=\"left\">Room Type</TableCell>\r\n                            <TableCell align=\"left\">Maximum Person</TableCell>\r\n                            <TableCell align=\"left\">Price</TableCell>\r\n                            <TableCell align=\"center\">Has Single Use</TableCell>\r\n                            <TableCell align=\"center\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {rooms.map((val) => (\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">{val.roomObj.roomNo}</TableCell>\r\n                                    <TableCell align=\"left\">{val.roomObj.roomType}</TableCell>\r\n                                    <TableCell align=\"left\">{val.roomObj.maxPerson}</TableCell>\r\n                                    <TableCell align=\"left\">{val.roomObj.price}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Checkbox\r\n                                            checked={val.roomObj.hasSingleUse}\r\n                                            inputProps={{'aria-label': 'primary checkbox'}}/>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button>\r\n                                            <AnnouncementIcon\r\n                                                className={classes.icon}/>\r\n                                        </Button>\r\n                                        <Button>\r\n                                            <ClearIcon className={classes.icon}/>\r\n                                        </Button>\r\n\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        )\r\n                        }\r\n\r\n                    </TableBody>\r\n                </Table>\r\n\r\n            </TableContainer>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\Models\\Room.js",[],["150","151"],"C:\\Users\\mctur\\Documents\\Projects\\React Web\\bwguesthouses\\src\\components\\MyHouse\\MiniComponents\\AddHouseImages\\index.js",["152","153"],"import React, {Component, useCallback, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nfunction AddHouseImages() {\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                // Do whatever you want with the file contents\r\n                const binaryStr = reader.result\r\n                console.log(binaryStr)\r\n            }\r\n            reader.readAsArrayBuffer(file)\r\n        })\r\n\r\n    }, [])\r\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddHouseImages);",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":115,"column":13,"nodeType":"160","messageId":"161","endLine":115,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":17,"column":10,"nodeType":"164","messageId":"165","endLine":17,"endColumn":14},{"ruleId":"162","severity":1,"message":"166","line":112,"column":11,"nodeType":"164","messageId":"165","endLine":112,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":13},{"ruleId":"162","severity":1,"message":"167","line":13,"column":7,"nodeType":"164","messageId":"165","endLine":13,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":13},{"ruleId":"162","severity":1,"message":"167","line":13,"column":7,"nodeType":"164","messageId":"165","endLine":13,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":8,"column":9,"nodeType":"164","messageId":"165","endLine":8,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":7,"column":9,"nodeType":"164","messageId":"165","endLine":7,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":7,"column":9,"nodeType":"164","messageId":"165","endLine":7,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":7,"column":9,"nodeType":"164","messageId":"165","endLine":7,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":7,"column":9,"nodeType":"164","messageId":"165","endLine":7,"endColumn":13},{"ruleId":"162","severity":1,"message":"168","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":4,"column":9,"nodeType":"164","messageId":"165","endLine":4,"endColumn":13},{"ruleId":"162","severity":1,"message":"169","line":7,"column":18,"nodeType":"164","messageId":"165","endLine":7,"endColumn":26},{"ruleId":"162","severity":1,"message":"170","line":8,"column":24,"nodeType":"164","messageId":"165","endLine":8,"endColumn":31},{"ruleId":"162","severity":1,"message":"171","line":13,"column":13,"nodeType":"164","messageId":"165","endLine":13,"endColumn":18},{"ruleId":"162","severity":1,"message":"172","line":13,"column":20,"nodeType":"164","messageId":"165","endLine":13,"endColumn":29},{"ruleId":"162","severity":1,"message":"173","line":13,"column":31,"nodeType":"164","messageId":"165","endLine":13,"endColumn":40},{"ruleId":"162","severity":1,"message":"174","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":19},{"ruleId":"162","severity":1,"message":"175","line":14,"column":21,"nodeType":"164","messageId":"165","endLine":14,"endColumn":30},{"ruleId":"162","severity":1,"message":"176","line":14,"column":32,"nodeType":"164","messageId":"165","endLine":14,"endColumn":40},{"ruleId":"162","severity":1,"message":"177","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":16},{"ruleId":"162","severity":1,"message":"178","line":8,"column":12,"nodeType":"164","messageId":"165","endLine":8,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":38,"column":29,"nodeType":"164","endLine":38,"endColumn":40},{"ruleId":"162","severity":1,"message":"181","line":3,"column":5,"nodeType":"164","messageId":"165","endLine":3,"endColumn":11},{"ruleId":"162","severity":1,"message":"182","line":5,"column":5,"nodeType":"164","messageId":"165","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"183","line":6,"column":5,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"162","severity":1,"message":"184","line":7,"column":5,"nodeType":"164","messageId":"165","endLine":7,"endColumn":10},{"ruleId":"162","severity":1,"message":"185","line":8,"column":5,"nodeType":"164","messageId":"165","endLine":8,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":49,"column":29,"nodeType":"164","endLine":49,"endColumn":40},{"ruleId":"162","severity":1,"message":"186","line":27,"column":12,"nodeType":"164","messageId":"165","endLine":27,"endColumn":17},{"ruleId":"162","severity":1,"message":"187","line":27,"column":19,"nodeType":"164","messageId":"165","endLine":27,"endColumn":27},{"ruleId":"179","severity":1,"message":"188","line":57,"column":25,"nodeType":"164","endLine":57,"endColumn":32},{"ruleId":"162","severity":1,"message":"189","line":65,"column":14,"nodeType":"164","messageId":"165","endLine":65,"endColumn":29},{"ruleId":"154","replacedBy":"190"},{"ruleId":"156","replacedBy":"191"},{"ruleId":"162","severity":1,"message":"192","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"193","line":1,"column":40,"nodeType":"164","messageId":"165","endLine":1,"endColumn":48},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'fixedHeightPaper' is assigned a value but never used.","'drawerWidth' is assigned a value but never used.","'useEffect' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'RoomList' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'roomTypeColle' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Button' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'flaga' is assigned a value but never used.","'setFlaga' is assigned a value but never used.","Assignments to the 'roomColle' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'getAnnouncement' is defined but never used.",["194"],["195"],"'Component' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]